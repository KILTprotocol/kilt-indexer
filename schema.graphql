# To improve query performance, we strongly suggest adding indexes to any field that you plan to filter or sort by
# Add the `@index` or `@index(unique: true)` annotation after any non-key field
# https://academy.subquery.network/build/graphql.html#indexing-by-non-primary-key-field

type Block @entity {
  id: ID! # <Block ordinal number from genesis block>
  hash: String! @index(unique: true) # Block Hash as hex-string
  timeStamp: Date! # Date of creation of this block
}

## For Credentials:

type Attestation @entity {
  id: ID! # <Block number> + "-" + <ordinal number within block>
  claimHash: String! @index # ClaimHashOf, can be duplicated
  cType: CType! @index # Id of the CType used in this attestation. A.k.a.: cTypeHash
  attester: String! @index # DID of the attester
  payer: String! # Account address
  delegationID: String
  valid: Boolean!
  creationBlock: Block!
  revocationBlock: Block
  removalBlock: Block
}

type CType @entity {
  # This is an Aggregation Entity allowing us to calculate all the attestations created, revoked and removed per CType
  id: ID! # "kilt:ctype:" + <CType hash>
  registrationBlock: Block!
  author: String! @index # DID of the creator
  definition: String! # cType Schema
  attestationsCreated: Int!
  attestationsRevoked: Int!
  attestationsRemoved: Int! # either valid or revoked credentials can be removed.
  validAttestations: Int! # number of credentials neither revoked nor removed.
}

## For DIDs:

type Did @entity {
  id: ID! # "did:kilt:" + <identifier (encoded as address)>
  payer: String! @index
  creationBlock: Block!
  deletionBlock: Block
  web3name: Web3Name # w3n:user , only the current one
  active: Boolean! # whether it has been deactivated or not
}

type Web3Name @entity {
  id: ID! # "w3n:" + <user name>
  banned: Boolean!
  ownerships: [Ownership]! @derivedFrom(field: "name")
}

type Ownership @entity {
  id: ID! # "#" + <ordinal number> + "w3n:" + <user name>
  name: Web3Name! @index
  bearer: Did! @index
  claimBlock: Block!
  releaseBlock: Block
}

enum SanctionNature {
  permission
  prohibition
}

type Sanction @entity {
  id: ID! # "ยง" + <ordinal number> + "w3n:" + <user name>
  nature: SanctionNature!
  name: Web3Name! @index
  enforcementBlock: Block!
}

## For AssetDIDs:

type Chain @entity {
  id: ID! # <chain-namespace> + ":" + <chain-reference> = caip-2-chain-id
  namespace: String!
  reference: String!
}

type Asset @entity {
  id: ID! # <asset-namespace> + ":" + <asset-reference> + [":" + <asset-id>]
  namespace: String!
  reference: String!
  identifier: String
}

type AssetDID @entity {
  id: ID! # "did:asset:" + <chain-namespace> + ":" + <chain-reference> + <asset-namespace> + ":" + <asset-reference> + [":" + <asset-id>]
  chain: Chain!
  asset: Asset!
}

type PublicCredential @entity {
  id: ID! # <credential-hash>
  object: AssetDID! @index
  cType: CType!
  attester: Did! @index
  claim: String! # content of the claim
  delegationID: String
  valid: Boolean!
  creationBlock: Block!
  removalBlock: Block
  rulingBlock: [Ruling] @derivedFrom(field: "credential")
}

# # just "[Block]" is unfortunately not possible
# # Failed approach:
# revocationBlocks: [Block]
# restorationBlocks: [Block] # un-revocation

enum RulingNature {
  revocation
  restoration # un-revocation
}

## Possible names "Validation", "Evaluation", "Accreditation"
type Ruling @entity {
  id: ID! # "#" + <ordinal number> + "_" + <credential-hash>
  credential: PublicCredential!
  nature: RulingNature!
  rulingBlock: Block!
}
