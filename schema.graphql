# To improve query performance, we strongly suggest adding indexes to any field that you plan to filter or sort by
# Add the `@index` or `@index(unique: true)` annotation after any non-key field
# https://academy.subquery.network/build/graphql.html#indexing-by-non-primary-key-field

type Block @entity {
  id: ID! # Block Ordinal Number from genesis block
  hash: String! @index(unique: true) # Block Hash as hex-string
  timeStamp: Date! # Date of creation of this block
}

type Attestation @entity {
  id: ID! # event id, i.e.: block number and event index
  claimHash: String! @index # ClaimHashOf, can be duplicated
  cType: CType! @index # Id of the CType used in this attestation. A.k.a.: cTypeHash
  attester: String! @index # DID of the attester
  payer: String! # Account address
  delegationID: String
  valid: Boolean!
  creationBlock: Block!
  revocationBlock: Block
  removalBlock: Block
}

type CType @entity {
  # This is an Aggregation Entity allowing us to calculate all the attestations created, revoked and removed per CType
  id: ID! # id is  "kilt:ctype:" + CType hash
  registrationBlock: Block!
  author: String! @index # DID of the creator
  definition: String! # cType Schema
  attestationsCreated: Int!
  attestationsRevoked: Int!
  attestationsRemoved: Int! # either valid or revoked credentials can be removed.
  validAttestations: Int! # number of credentials neither revoked nor removed.
}

type DID @entity {
  id: ID! # id is  "did:kilt:" + 4...
  payer: String! @index
  creationBlock: Block!
  deletionBlock: Block
  web3name: Web3Name # w3n:user , only the current one
  # Should we add a "valid" or "deactivated" field??
  # Or is the deletionBlock enough?
}

type Web3Name @entity {
  id: ID! # id is "w3n:" + user name
  banned: Boolean!
  bearers: [Bearer]! @derivedFrom(field: "title")
}

# other possible names:
# BearingTitle | BearingData | Ownership
type Bearer @entity {
  id: ID! # "#" + ordinal number + "w3n:" + user name
  title: Web3Name! @index
  did: DID! @index
  claimBlock: Block!
  releaseBlock: Block
}

# using numbers on the field names don't let you use them as an @index
# using "w3n" instead of "title" on Bearer breaks Postgres

enum SanctionNature {
  permission
  prohibition
}

type Sanction @entity {
  id: ID! #  "ยง" + ordinal number + "w3n:" + user name
  nature: SanctionNature!
  title: Web3Name! @index
  # not sure yet :: type: SanctionNature! @index # made it an index to count totals of banned or unbanned
  enforcementBlock: Block!
}
