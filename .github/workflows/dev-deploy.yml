on:
  workflow_dispatch:
  push:
    branches:
      - develop

name: Dev deployment

jobs:
  deploy:
    name: Build image and push to Amazon ECR
    runs-on: ubuntu-latest
    environment: development

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: "true"
      - name: Build image
        run: |
          docker build \ 
          --build-arg CRAWL_PEREGRINE=true \
          --build-arg RPC_ENDPOINTS=${{ vars.RPC_ENDPOINTS }} \
          -t indexer:dev .

      - name: Tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: kilt/indexer
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker tag indexer:dev $ECR_REGISTRY/$ECR_REPOSITORY:dev
          docker tag indexer:dev $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:dev
      - name: Deploy to kilt cluster
        uses: kodermax/kubectl-aws-eks@main
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: kilt/indexer
          IMAGE_TAG: ${{ github.sha }}

        with:
          args: rollout restart deployment subquery-node -n indexer-dev
